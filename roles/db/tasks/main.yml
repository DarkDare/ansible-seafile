# install and configure mariadb db stuff

# install mariadb
- name: Install MariaDB server and dependencies
  apt: name={{ item }} state=present
  with_items:
    - mariadb-server
# Install MariaDB client (for maintenance / debugging)
    - mariadb-client
# stack (ansible) requirement
    - python-mysqldb

# configure initial mysql root pw
- include_vars: dbconfig.yml
## FIXME: changing root password in dbconfig doesn't work right now!
- mysql_user: name=root password={{ db_root_pw }} state=present
  ignore_errors: True

# configure seafile databases
- name: creating/checking ccnet-db
  mysql_db: >
    name={{ db_ccnet }}
    encoding=utf8
    state=present
    login_user=root
    login_password={{ db_root_pw }}
- name: creating/checking seafile-db
  mysql_db: >
    name={{ db_seafile }}
    encoding=utf8
    state=present
    login_user=root
    login_password={{ db_root_pw }}
- name: creating/checking seahub-db
  mysql_db: >
    name={{ db_seahub }}
    encoding=utf8
    state=present
    login_user=root
    login_password={{ db_root_pw }}
# create cluster avatar database
## to support external databases this gets done
## in nodes/tasks/master.yml, too
## But it's guarded by IF NOT EXISTS
- copy: src=avatar_uploaded.sql dest=/tmp
- name: "seahub-db: creating avatar_uploaded table (if not exists)"
  mysql_db: >
    name={{ db_seahub }}
    state=import
    target=/tmp/avatar_uploaded.sql
    login_user=root
    login_password={{ db_root_pw }}

# configure seafile database user
- name: configure seafile database user
  mysql_user: >
    name={{ db_user }}
    password={{ db_pw }}
    host={{ item }}
    priv="{{ db_ccnet }}.*:ALL/{{ db_seafile }}.*:ALL/{{ db_seahub }}.*:ALL"
    state=present
    login_user=root
    login_password={{ db_root_pw }}
  with_items: groups['nodes'] + ['127.0.0.1', 'localhost']

- name: bind mariadb to all IPs
  lineinfile: "dest=/etc/mysql/my.cnf regexp='^bind-address' line='bind-address		= 0.0.0.0'"
  register: db_ips

- name: restart mariadb
  service: name=mysql state=restarted
  when: db_ips.changed
